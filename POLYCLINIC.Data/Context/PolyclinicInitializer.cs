using POLYCLINIC.Data.Entities;
using System;
using System.Collections.Generic;

namespace POLYCLINIC.Data
{
    public class PolyclinicInitializer : System.Data.Entity.DropCreateDatabaseIfModelChanges<BaseContext>
    {
        protected override void Seed(BaseContext context)
        {
            var countryList = new List<Country>()
            {
                new Country(){Name = "Россия"},
            };
            var genderList = new List<Gender>()
            {
                new Gender(){Name = "Мужской"},
                new Gender(){Name = "Женский"}
            };
            var streetList1 = new List<Street>()
            {
                new Street(){Name = "Улица Генерала Хлебникова"},
                new Street(){Name = "Улица Кирякиных"},
                new Street(){Name = "Улица Радищева"}
            };
            var streetList2 = new List<Street>()
            {
                new Street(){Name = "улица 20 лет ВЛКСМ"},
                new Street(){Name = "30-й микрорайон"},
                new Street(){Name = "5-й Авдотьинский переулок"}
            };
            var streetList3 = new List<Street>()
            {
                new Street(){Name = "Авдотьинская улица"},
                new Street(){Name = "Дальний тупик"},
                new Street(){Name = "Ваграночная улица"}
            };
            var streetList4 = new List<Street>()
            {
                new Street(){Name = "улица Ермака"},
                new Street(){Name = "Ермолинская улица"},
                new Street(){Name = "Гаражный переулок"}
            };
            var streetListAll = new List<Street>();
            streetListAll.AddRange(streetList1);
            streetListAll.AddRange(streetList2);
            streetListAll.AddRange(streetList3);
            streetListAll.AddRange(streetList4);
            var regionList = new List<Region>()
            {
                new Region(){Name = "Ленинский район", Streets = streetList1},
                new Region(){Name = "Фрунзенский район", Streets = streetList2},
                new Region(){Name = "Октябрьский район", Streets = streetList3},
                new Region(){Name = "Советский район", Streets = streetList4},
            };
            var patientList = new List<Patient>()
            {
                new Patient()
                {
                    FirstName = getFirstName(),
                    LastName = getLastName(),
                    Login = "test_1",
                    Password = "test_1",
                    DateOfBirth = DateTime.Now.AddYears(-random.Next(18, 25)),
                    Gender = genderList[0],
                    MedicalPolicyNumber = "56489416547",
                    Street = streetListAll[random.Next(streetListAll.Count)],
                    Vouchers = new List<VoucherForAppointment>(),
                    Citizenship = countryList[0],
                    IdentityDocument = "Паспорт гражданина РФ 5789 815462, выдан отделом УФМС России по Ивановской области в Шуйском районе, код подразделения 370-009, дата выдачи 06.06.2011",
                    PlaceOfBirth = "г.Иваново",
                },
                new Patient()
                {
                    FirstName = getFirstName(),
                    LastName = getLastName(),
                    Login = "test_2",
                    Password = "test_2",
                    DateOfBirth = DateTime.Now.AddYears(-random.Next(18, 25)),
                    Gender = genderList[0],
                    MedicalPolicyNumber = "54018879931",
                    Street = streetListAll[random.Next(streetListAll.Count)],
                    Vouchers = new List<VoucherForAppointment>(),
                    Citizenship = countryList[0],
                    IdentityDocument = "Паспорт гражданина РФ ",
                    PlaceOfBirth = "г.Иваново"
                }
            };
            var specializationList = new List<Specialization>()
            {
                new Specialization(){Name = "Педиатр"},
                new Specialization(){Name = "Венеролог"},
                new Specialization(){Name = "Гинеколог"},
                new Specialization(){Name = "Дерматолог"},
                new Specialization(){Name = "Инфекционист"},
                new Specialization(){Name = "Кардиолог"},
                new Specialization(){Name = "Невролог"},
                new Specialization(){Name = "Ортопед"},
                new Specialization(){Name = "Онколог"},
                new Specialization(){Name = "Офтальмолог"},
                new Specialization(){Name = "Психотерапевт"},
                new Specialization(){Name = "Терапевт"},
                new Specialization(){Name = "Уролог"},
                new Specialization(){Name = "Хирург"}
            };
            var doctorList = new List<Doctor>();
            var scheduleSlotsList = new List<ScheduleSlot>();
            foreach (var spec in specializationList)
            {
                for (int i = 0; i < random.Next(10, 20); i++)
                {
                    var doctor = new Doctor()
                    {
                        FirstName = getFirstName(),
                        LastName = getLastName(),
                        Login = spec.Name + "_" + i,
                        Password = "123",
                        Region = regionList[random.Next(regionList.Count)],
                        Specialization = spec,
                        ScheduleSlots = new List<ScheduleSlot>(),
                        Vouchers = new List<VoucherForAppointment>()
                    };

                    foreach (DayOfWeek day in Enum.GetValues(typeof(DayOfWeek)))
                    {
                        if (day == DayOfWeek.Sunday) continue;
                        if (day == DayOfWeek.Saturday && random.Next(0, 3) != 0) continue;

                        for (double j = 8; j < random.Next(10, 14); j += .5)
                        {
                            var slot = new ScheduleSlot()
                            {
                                Doctor = doctor,
                                Weekday = day,
                                StartTime = new DateTime(2000, 1, 1).AddMinutes((int)(j * 60)),
                                EndTime = new DateTime(2000, 1, 1).AddMinutes((int)(j * 60) + 30),
                            };
                            scheduleSlotsList.Add(slot);
                        }
                    }


                    doctorList.Add(doctor);
                }
            }
            var adminList = new List<Admin>()
            {
                new Admin()
                {
                    FirstName = "admin",
                    LastName = "",
                    Login = "admin",
                    Password = "admin",
                }
            };

            genderList.ForEach(e => context.Gender.Add(e));
            streetList1.ForEach(e => context.Street.Add(e));
            streetList2.ForEach(e => context.Street.Add(e));
            streetList3.ForEach(e => context.Street.Add(e));
            streetList4.ForEach(e => context.Street.Add(e));
            regionList.ForEach(e => context.Region.Add(e));
            patientList.ForEach(e => context.Patient.Add(e));
            specializationList.ForEach(e => context.Specialization.Add(e));
            doctorList.ForEach(e => context.Doctor.Add(e));
            adminList.ForEach(e => context.Admin.Add(e));
            scheduleSlotsList.ForEach(e => context.ScheduleSlot.Add(e));

            context.SaveChanges();
        }

        Random random = new Random();
        private string getFirstName()
        {
            string[] names = { "Абрам", "Аваз", "Август", "Авдей", "Автандил", "Адам", "Адис", "Адольф", "Адриан", "Азарий", "Аким", "Алан (Ален)", "Александр", "Алексей", "Альберт", "Альфред", "Амадей", "Амадеус", "Амаяк", "Анатолий", "Ангел", "Андоим", "Андрей", "Аникита", "Антон", "Ануфрий", "Арам", "Арий", "Аристарх", "Аркадий", "Арно", "Арнольд", "Арон", "Арсен, Арсений", "Артем", "Артемий", "Артур", "Архип", "Аскольд", "Афанасий", "Ахмет", "Ашот", "Бежен", "Бенедикт", "Берек", "Бернар", "Богдан", "Боголюб", "Болеслав", "Бонифаций", "Борис", "Борислав", "Боян", "Бронислав", "Бруно", "Вадим", "Валентин", "Валерий", "Вальтер", "Василий", "Велизар", "Венедикт", "Вениамин", "Виктор", "Вилен", "Вилли", "Вильгельм", "Виссарион", "Виталий", "Витаутас", "Витольд", "Владимир", "Владислав", "Владлен", "Володар", "Вольдемар", "Всеволод", "Вячеслав", "Гавриил", "Гарри", "Гастон", "Геннадий", "Генрих", "Георгий", "Геральд", "Герасим", "Герман", "Глеб", "Гордей", "Гордон", "Градимир", "Григорий", "Гурий", "Давыд", "Даниил", "Демид", "Демьян", "Денис", "Джордан", "Дмитрий", "Дональд", "Донат", "Донатос", "Дорофей", "Евгений", "Евграф", "Евдоким", "Евстафий", "Егор", "Елизар", "Елисей", "Емельян", "Ермолай", "Ерофей", "Ефим", "Ефимий", "Ефрем", "Жан", "Ждан", "Жорж", "Захар", "Захария", "Зигмунд", "Зиновий", "Ибрагим", "Иван", "Игнат", "Игорь", "Измаил", "Израиль", "Илиан", "Илларион", "Илья", "Иннокентий", "Ион", "Ионос", "Иосиф", "Ираклий", "Иржи", "Исай", "Казимир", "Карен", "Карл", "Ким", "Кирилл", "Клавдий", "Клемент", "Клим", "Клод", "Кондрат", "Конкордий", "Константин", "Кузьма", "Лазарь", "Лев", "Леван", "Леонард", "Леонид", "Леонтий", "Леопольд", "Лука", "Любомир", "Людвиг", "Люсьен", "Мадлен", "Май", "Макар", "Максим", "Максимилиан", "Мануил", "Марат", "Мариан", "Марк", "Мартин", "Матвей", "Мераб", "Мечеслав", "Милан", "Мирон", "Мирослав", "Михаил", "Мичлов", "Модест", "Моисей", "Мурат", "Муслим", "Назар", "Назарий", "Натан", "Наум", "Никита", "Никифор", "Николай", "Никон", "Нисон", "Нифонт", "Олан", "Олег", "Олесь", "Онисим", "Орест", "Осип", "Оскар", "Павел", "Парамон", "Петр", "Платон", "Порфирий", "Прохор", "Равиль", "Радий", "Радомир", "Раис", "Раймонд", "Ратмир", "Рафаил", "Рафик", "Рашид", "Рем", "Ренольд", "Ринат", "Рифат", "Ричард", "Роберт", "Родион", "Ролан", "Роман", "Ростислав", "Рубен", "Рудольф", "Руслан", "Рустам", "Савва", "Савел", "Самсон", "Святослав", "Севастьян", "Северин", "Семен", "Серафим", "Сергей", "Сократ", "Соломон", "Спартак", "Стакрат", "Станислав", "Степан", "Стивен", "Стоян", "Таис", "Талик", "Тамаз", "Тарас", "Тельман", "Теодор", "Терентий", "Тибор", "Тигран", "Тигрий", "Тимофей", "Тимур", "Тит", "Тихон", "Трифон", "Трофим", "Ульманас", "Устин", "Фаддей", "Федор", "Феликс", "Феодосий", "Фидель", "Филимон", "Филипп", "Флорентий", "Фома", "Франц", "Фридрих", "Харитон", "Христиан", "Христос", "Христофор", "Эдвард", "Эдуард", "Эльдар", "Эмиль", "Эммануил", "Эраст", "Эрик", "Эрнест", "Юлиан", "Юрий", "Юхим", "Яким", "Яков", "Ян", "Яромир", "Ярослав", "Ясон" };
            return names[random.Next(0, names.Length - 1)];
        }

        private string getLastName()
        {
            string[] surnames = { "Смирнов", "Иванов", "Кузнецов", "Соколов", "Попов", "Лебедев", "Козлов", "Новиков", "Морозов", "Петров", "Волков", "Соловьёв", "Васильев", "Зайцев", "Павлов", "Семёнов", "Голубев", "Виноградов", "Богданов", "Воробьёв", "Фёдоров", "Михайлов", "Беляев", "Тарасов", "Белов", "Комаров", "Орлов", "Киселёв", "Макаров", "Андреев", "Ковалёв", "Ильин", "Гусев", "Титов", "Кузьмин", "Кудрявцев", "Баранов", "Куликов", "Алексеев", "Степанов", "Яковлев", "Сорокин", "Сергеев", "Романов", "Захаров", "Борисов", "Королёв", "Герасимов", "Пономарёв", "Григорьев", "Лазарев", "Медведев", "Ершов", "Никитин", "Соболев", "Рябов", "Поляков", "Цветков", "Данилов", "Жуков", "Фролов", "Журавлёв", "Николаев", "Крылов", "Максимов", "Сидоров", "Осипов", "Белоусов", "Федотов", "Дорофеев", "Егоров", "Матвеев", "Бобров", "Дмитриев", "Калинин", "Анисимов", "Петухов", "Антонов", "Тимофеев", "Никифоров", "Веселов", "Филиппов", "Марков", "Большаков", "Суханов", "Миронов", "Ширяев", "Александров", "Коновалов", "Шестаков", "Казаков", "Ефимов", "Денисов", "Громов", "Фомин", "Давыдов", "Мельников", "Щербаков", "Блинов", "Колесников", "Карпов", "Афанасьев", "Власов", "Маслов", "Исаков", "Тихонов", "Аксёнов", "Гаврилов", "Родионов", "Котов", "Горбунов", "Кудряшов", "Быков", "Зуев", "Третьяков", "Савельев", "Панов", "Рыбаков", "Суворов", "Абрамов", "Воронов", "Мухин", "Архипов", "Трофимов", "Мартынов", "Емельянов", "Горшков", "Чернов", "Овчинников", "Селезнёв", "Панфилов", "Копылов", "Михеев", "Галкин", "Назаров", "Лобанов", "Лукин", "Беляков", "Потапов", "Некрасов", "Хохлов", "Жданов", "Наумов", "Шилов", "Воронцов", "Ермаков", "Дроздов", "Игнатьев", "Савин", "Логинов", "Сафонов", "Капустин", "Кириллов", "Моисеев", "Елисеев", "Кошелев", "Костин", "Горбачёв", "Орехов", "Ефремов", "Исаев", "Евдокимов", "Калашников", "Кабанов", "Носков", "Юдин", "Кулагин", "Лапин", "Прохоров", "Нестеров", "Харитонов", "Агафонов", "Муравьёв", "Ларионов", "Федосеев", "Зимин", "Пахомов", "Шубин", "Игнатов", "Филатов", "Крюков", "Рогов", "Кулаков", "Терентьев", "Молчанов", "Владимиров", "Артемьев", "Гурьев", "Зиновьев", "Гришин", "Кононов", "Дементьев", "Ситников", "Симонов", "Мишин", "Фадеев", "Комиссаров", "Мамонтов", "Носов", "Гуляев", "Шаров", "Устинов", "Вишняков", "Евсеев", "Лаврентьев", "Брагин", "Константинов", "Корнилов", "Авдеев", "Зыков", "Бирюков", "Шарапов", "Никонов", "Щукин", "Дьячков", "Одинцов", "Сазонов", "Якушев", "Красильников", "Гордеев", "Самойлов", "Князев", "Беспалов", "Уваров", "Шашков", "Бобылёв", "Доронин", "Белозёров", "Рожков", "Самсонов", "Мясников", "Лихачёв", "Буров", "Сысоев", "Фомичёв", "Русаков", "Стрелков", "Гущин", "Тетерин", "Колобов", "Субботин", "Фокин", "Блохин", "Селиверстов", "Пестов", "Кондратьев", "Силин", "Меркушев", "Лыткин", "ТуровСмирнов", "Иванов", "Кузнецов", "Соколов", "Попов", "Лебедев", "Козлов", "Новиков", "Морозов", "Петров", "Волков", "Соловьёв", "Васильев", "Зайцев", "Павлов", "Семёнов", "Голубев", "Виноградов", "Богданов", "Воробьёв", "Фёдоров", "Михайлов", "Беляев", "Тарасов", "Белов", "Комаров", "Орлов", "Киселёв", "Макаров", "Андреев", "Ковалёв", "Ильин", "Гусев", "Титов", "Кузьмин", "Кудрявцев", "Баранов", "Куликов", "Алексеев", "Степанов", "Яковлев", "Сорокин", "Сергеев", "Романов", "Захаров", "Борисов", "Королёв", "Герасимов", "Пономарёв", "Григорьев", "Лазарев", "Медведев", "Ершов", "Никитин", "Соболев", "Рябов", "Поляков", "Цветков", "Данилов", "Жуков", "Фролов", "Журавлёв", "Николаев", "Крылов", "Максимов", "Сидоров", "Осипов", "Белоусов", "Федотов", "Дорофеев", "Егоров", "Матвеев", "Бобров", "Дмитриев", "Калинин", "Анисимов", "Петухов", "Антонов", "Тимофеев", "Никифоров", "Веселов", "Филиппов", "Марков", "Большаков", "Суханов", "Миронов", "Ширяев", "Александров", "Коновалов", "Шестаков", "Казаков", "Ефимов", "Денисов", "Громов", "Фомин", "Давыдов", "Мельников", "Щербаков", "Блинов", "Колесников", "Карпов", "Афанасьев", "Власов", "Маслов", "Исаков", "Тихонов", "Аксёнов", "Гаврилов", "Родионов", "Котов", "Горбунов", "Кудряшов", "Быков", "Зуев", "Третьяков", "Савельев", "Панов", "Рыбаков", "Суворов", "Абрамов", "Воронов", "Мухин", "Архипов", "Трофимов", "Мартынов", "Емельянов", "Горшков", "Чернов", "Овчинников", "Селезнёв", "Панфилов", "Копылов", "Михеев", "Галкин", "Назаров", "Лобанов", "Лукин", "Беляков", "Потапов", "Некрасов", "Хохлов", "Жданов", "Наумов", "Шилов", "Воронцов", "Ермаков", "Дроздов", "Игнатьев", "Савин", "Логинов", "Сафонов", "Капустин", "Кириллов", "Моисеев", "Елисеев", "Кошелев", "Костин", "Горбачёв", "Орехов", "Ефремов", "Исаев", "Евдокимов", "Калашников", "Кабанов", "Носков", "Юдин", "Кулагин", "Лапин", "Прохоров", "Нестеров", "Харитонов", "Агафонов", "Муравьёв", "Ларионов", "Федосеев", "Зимин", "Пахомов", "Шубин", "Игнатов", "Филатов", "Крюков", "Рогов", "Кулаков", "Терентьев", "Молчанов", "Владимиров", "Артемьев", "Гурьев", "Зиновьев", "Гришин", "Кононов", "Дементьев", "Ситников", "Симонов", "Мишин", "Фадеев", "Комиссаров", "Мамонтов", "Носов", "Гуляев", "Шаров", "Устинов", "Вишняков", "Евсеев", "Лаврентьев", "Брагин", "Константинов", "Корнилов", "Авдеев", "Зыков", "Бирюков", "Шарапов", "Никонов", "Щукин", "Дьячков", "Одинцов", "Сазонов", "Якушев", "Красильников", "Гордеев", "Самойлов", "Князев", "Беспалов", "Уваров", "Шашков", "Бобылёв", "Доронин", "Белозёров", "Рожков", "Самсонов", "Мясников", "Лихачёв", "Буров", "Сысоев", "Фомичёв", "Русаков", "Стрелков", "Гущин", "Тетерин", "Колобов", "Субботин", "Фокин", "Блохин", "Селиверстов", "Пестов", "Кондратьев", "Силин", "Меркушев", "Лыткин", "Туров" };
            return surnames[random.Next(0, surnames.Length - 1)];
        }
    }
}
